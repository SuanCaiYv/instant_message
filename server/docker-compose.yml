version: "3.8"

services:
  26379.redis:
    image: redis:7-alpine
    container_name: redis-26379
    restart: always
    ports:
      - "26379:26379"
    networks:
      - prim
    volumes:
      - ./redis-cluster/26379/redis.conf:/usr/local/etc/redis/redis.conf
      - ./redis-cluster/26379/data:/data
    command: redis-server /usr/local/etc/redis/redis.conf
  26380.redis:
    image: redis:7-alpine
    container_name: redis-26380
    restart: always
    ports:
      - "26380:26380"
    networks:
      - prim
    volumes:
      - ./redis-cluster/26380/redis.conf:/usr/local/etc/redis/redis.conf
      - ./redis-cluster/26380/data:/data
    command: redis-server /usr/local/etc/redis/redis.conf
  26381.redis:
    image: redis:7-alpine
    container_name: redis-26381
    restart: always
    ports:
      - "26381:26381"
    networks:
      - prim
    volumes:
      - ./redis-cluster/26381/redis.conf:/usr/local/etc/redis/redis.conf
      - ./redis-cluster/26381/data:/data
    command: redis-server /usr/local/etc/redis/redis.conf
  redis-cluster-meet:
    depends_on:
      - 26379.redis
      - 26380.redis
      - 26381.redis
    image: redis:7-alpine
    container_name: redis-cluster-meet
    networks:
      - prim
    volumes:
      - ./redis-cluster/docker-cluster.sh:/cmd.sh
    command:
      - sh
      - /cmd.sh
  # todo timezone setup on init
  postgres.db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_PASSWORD=postgres
      - APP_DB_NAME=prim
      - APP_DB_USER=prim
      - APP_DB_PASSWORD=prim123456
    ports:
      - "15432:5432"
    networks:
      - prim
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
  kafka.mq:

  scheduler.prim:
    depends_on:
      - redis-cluster-meet
    image: prim:scheduler
    networks:
      - prim
    ports:
      - "11220:11220"
      - "11222:11222"
      - "11320:11320"
    tty: true
  seqnum.prim:
    depends_on:
      - scheduler.prim
      - postgres.db
    image: prim:recorder
    networks:
      - prim
    ports:
      - "11420:11420"
    restart: always
    tty: true
  api.prim:
    depends_on:
      - scheduler.prim
      - recorder.prim
    image: prim:api
    networks:
      - prim
    ports:
      - "11320:11320"
      - "11330:11330"
    tty: true
  message.prim:
    depends_on:
      - scheduler.prim
      - recorder.prim
    image: prim:message
    networks:
      - prim
    ports:
      - "11122:11122"
      - "11120:11120"
    restart: always
    tty: true
networks:
  prim:
    driver: bridge