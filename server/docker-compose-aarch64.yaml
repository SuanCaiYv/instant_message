version: "3.8"

services:
  26379.redis:
    image: redis:7-alpine
    container_name: redis-26379
    restart: always
    ports:
      - "26379:26379"
    networks:
      - prim
    volumes:
      - ./redis-cluster/26379/redis.conf:/usr/local/etc/redis/redis.conf
      - ./redis-cluster/26379/data:/data
    command: redis-server /usr/local/etc/redis/redis.conf
  26380.redis:
    image: redis:7-alpine
    container_name: redis-26380
    restart: always
    ports:
      - "26380:26380"
    networks:
      - prim
    volumes:
      - ./redis-cluster/26380/redis.conf:/usr/local/etc/redis/redis.conf
      - ./redis-cluster/26380/data:/data
    command: redis-server /usr/local/etc/redis/redis.conf
  26381.redis:
    image: redis:7-alpine
    container_name: redis-26381
    restart: always
    ports:
      - "26381:26381"
    networks:
      - prim
    volumes:
      - ./redis-cluster/26381/redis.conf:/usr/local/etc/redis/redis.conf
      - ./redis-cluster/26381/data:/data
    command: redis-server /usr/local/etc/redis/redis.conf
  redis-cluster-meet:
    depends_on:
      - 26379.redis
      - 26380.redis
      - 26381.redis
    image: redis:7-alpine
    container_name: redis-cluster-meet
    networks:
      - prim
    volumes:
      - ./redis-cluster/docker-cluster.sh:/cmd.sh
    command:
      - sh
      - /cmd.sh
  # todo timezone setup on init
  postgres.db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_PASSWORD=postgres
      - APP_DB_NAME=prim
      - APP_DB_USER=prim
      - APP_DB_PASSWORD=prim123456
    ports:
      - "15432:5432"
    networks:
      - prim
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
  single.kafka:
    image: docker.io/bitnami/kafka:3.5
    ports:
      - "9092:9092"
    volumes:
      - "./kafka-cluster/compose:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@single.kafka:9093
      # Listeners
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    tty: true
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server single.kafka:9092 --list"]
      interval: 1s
      timeout: 2s
      retries: 5
    networks:
      - prim
  scheduler.prim:
    healthcheck:
      test: [ "CMD", "nc", "-zv", "localhost", "9092"]
      interval: 5s
      timeout: 3s
      retries: 5
    depends_on:
      single.kafka:
        condition: service_healthy
    image: ghcr.io/suancaiyv/prim/scheduler-aarch64-linux:latest
    networks:
      - prim
    ports:
      - "11220:11220"
      - "11222:11222"
      - "11230:11230"
    tty: true
  seqnum.prim:
    depends_on:
      scheduler.prim:
        condition: service_started
    image: ghcr.io/suancaiyv/prim/seqnum-aarch64-linux:latest
    networks:
      - prim
    ports:
      - "11420:11420"
    restart: always
    tty: true
  api.prim:
    depends_on:
      scheduler.prim:
        condition: service_started
    image: ghcr.io/suancaiyv/prim/api-aarch64-linux:latest
    networks:
      - prim
    ports:
      - "11320:11320"
      - "11330:11330"
    tty: true
    restart: always
  message.prim:
    depends_on:
      scheduler.prim:
        condition: service_started
    image: ghcr.io/suancaiyv/prim/message-aarch64-linux:latest
    networks:
      - prim
    ports:
      - "11122:11122"
      - "11120:11120"
    restart: no
    volumes:
      - ./msglog/compose:/prim/msglog
    tty: true
networks:
  prim:
    driver: bridge