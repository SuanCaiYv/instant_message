syntax = "proto3";

package node_proto;

message CurrNodeGroupIdUserListReq {
    uint32 node_id = 1;
    uint64 group_id = 2;
}

message CurrNodeGroupIdUserListResp {
    repeated uint64 user_list = 1;
}

message WhichNodeReq {
    uint64 user_id = 1;
}

message WhichNodeResp {
    uint32 node_id = 1;
}

service Scheduler {
    rpc CurrNodeGroupIdUserList(CurrNodeGroupIdUserListReq) returns (CurrNodeGroupIdUserListResp);
    // should invoked by api module
    rpc AddGroup(AddGroupReq) returns (AddGroupResp) {}
    // should invoked by api module
    rpc LeaveGroup(LeaveGroupReq) returns (LeaveGroupResp) {}
    rpc WhichNode(WhichNodeReq) returns (WhichNodeResp) {}
}

message AddGroupReq {
    uint64 user_id = 1;
    uint64 group_id = 2;
}

message AddGroupResp {
    bool success = 1;
    string err_msg = 2;
}

message LeaveGroupReq {
    uint64 user_id = 1;
    uint64 group_id = 2;
}

message LeaveGroupResp {
    bool success = 1;
    string err_msg = 2;
}

message GroupUserListReq {
    uint64 group_id = 1;
}

message GroupUserListResp {
    repeated uint64 user_list = 1;
}

service API {
    // admin user approve join group request and message call api method,
    // after api method processing done, it will call scheduler method.
    rpc AddGroup(AddGroupReq) returns (AddGroupResp) {}
    rpc LeaveGroup(LeaveGroupReq) returns (LeaveGroupResp) {}
    rpc GroupUserList(GroupUserListReq) returns (GroupUserListResp) {}
}