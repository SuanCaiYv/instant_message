syntax = "proto3";

package node_proto;

message CurrNodeGroupIdUserListReq {
    uint32 node_id = 1;
    uint64 group_id = 2;
}

message CurrNodeGroupIdUserListResp {
    repeated uint64 user_id_list = 1;
}

service Scheduler {
    rpc CurrNodeGroupIdUserList(CurrNodeGroupIdUserListReq) returns (CurrNodeGroupIdUserListResp);
    // should invoked by api mode
    rpc AddGroup(AddGroupReq) returns (AddGroupResp) {}
    // should invoked by api mode
    rpc LeaveGroup(LeaveGroupReq) returns (LeaveGroupResp) {}
}

message AddGroupReq {
    uint64 user_id = 1;
    uint64 group_id = 2;
}

message AddGroupResp {
    bool success = 1;
    string err_msg = 2;
}

message LeaveGroupReq {
    uint64 user_id = 1;
    uint64 group_id = 2;
}

message LeaveGroupResp {
    bool success = 1;
    string err_msg = 2;
}

service API {
    rpc AddGroup(AddGroupReq) returns (AddGroupResp) {}
    rpc LeaveGroup(LeaveGroupReq) returns (LeaveGroupResp) {}
}