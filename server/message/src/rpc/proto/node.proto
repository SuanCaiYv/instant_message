syntax = "proto3";

package node_proto;

message CurrNodeGroupIdUserListReq {
    uint32 node_id = 1;
    uint64 group_id = 2;
}

message CurrNodeGroupIdUserListResp {
    repeated uint64 user_list = 1;
}

message WhichNodeReq {
    uint64 user_id = 1;
}

message WhichNodeResp {
    uint32 node_id = 1;
}

message PushMsgReq {
    uint64 sender = 1;
    uint64 receiver = 2;
    uint64 timestamp = 3;
    uint32 version = 4;
    uint32 type = 5;
    string payload = 6;
    string extension = 7;
}

message PushMsgResp {
    bool success = 1;
    string err_msg = 2;
}

message RecorderListReq {}

message RecorderListResp {
    repeated string address_list = 1;
    repeated uint32 node_id_list = 2;
}

message WhichToConnectReq {
    uint64 user_id = 1;
}

message WhichToConnectResp {
    string address = 1;
}

service Scheduler {
    rpc CurrNodeGroupIdUserList(CurrNodeGroupIdUserListReq) returns (CurrNodeGroupIdUserListResp);
    rpc WhichNode(WhichNodeReq) returns (WhichNodeResp);
    rpc PushMsg(PushMsgReq) returns (PushMsgResp);
    rpc RecorderList(RecorderListReq) returns (RecorderListResp);
    rpc WhichToConnect(WhichToConnectReq) returns (WhichToConnectResp);
}

message GroupUserListReq {
    uint64 group_id = 1;
}

message GroupUserListResp {
    repeated uint64 user_list = 1;
}

service API {
    rpc GroupUserList(GroupUserListReq) returns (GroupUserListResp);
}